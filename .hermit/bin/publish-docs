#!/bin/bash

# Stop on errors
set -eou pipefail
set -x

# Variables
DOCS_DIR="site"
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
TEMP_DIR=$(mktemp -d)

# Check if git working directory is clean
if [ -n "$(git status --porcelain)" ]; then
    echo "Error: Git working directory is not clean. Please commit or stash changes first."
    exit 1
fi

# Ensure docs directory exists
if [ ! -d "$DOCS_DIR" ]; then
  echo "Error: Documentation directory '$DOCS_DIR' does not exist."
  exit 1
fi

# Build the docs (optional, depending on your generator)
# Uncomment if your docs need to be built before publishing
# echo "Building documentation..."
just docs

# Save the current branch
echo "Current branch is $BRANCH_NAME"

# Copy the docs to the temporary directory
cp -r "$DOCS_DIR"/* "$TEMP_DIR/"

# Switch to the gh-pages branch (create it if it doesn't exist)
if git show-ref --verify --quiet refs/heads/gh-pages; then
  git checkout gh-pages
else
  git checkout --orphan gh-pages
  git rm -rf .
fi

# Clear existing content and copy new docs
echo "Publishing documentation to gh-pages..."
rm -rf *
cp -r "$TEMP_DIR"/* .

# Add and commit changes
git add -A
git commit -m "Publish documentation [$(date)]"

# Push to GitHub
git push origin gh-pages

# Clean up and return to the original branch
git checkout "$BRANCH_NAME"
rm -rf "$TEMP_DIR"

echo "Documentation published to gh-pages branch."
