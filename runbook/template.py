TEMPLATES = {}

# PYTHON_TEMPLATE_START
# 2024-02-11T13:59:14-08:00
TEMPLATES[
    "python"
] = """

""".strip()
# PYTHON_TEMPLATE_START

# DENO_TEMPLATE_START
# 2024-02-11T13:59:14-08:00
TEMPLATES[
    "deno"
] = """
ewogImNlbGxzIjogWwogIHsKICAgImNlbGxfdHlwZSI6ICJtYXJrZG93biIsCiAgICJpZCI6ICI2ZmY4MDczNC04OTA2LTRmODUtOWFhYi02Y2VhY2U3YmE0MjUiLAogICAibWV0YWRhdGEiOiB7CiAgICAiZWRpdGFibGUiOiB0cnVlLAogICAgInNsaWRlc2hvdyI6IHsKICAgICAic2xpZGVfdHlwZSI6ICIiCiAgICB9LAogICAgInRhZ3MiOiBbXQogICB9LAogICAic291cmNlIjogWwogICAgIiMgVElUTEVcbiIsCiAgICAiIyMgREVTQ1JJUFRJT04iCiAgIF0KICB9LAogIHsKICAgImNlbGxfdHlwZSI6ICJtYXJrZG93biIsCiAgICJpZCI6ICIwNWIzZTg4MC04NjAxLTQxMDctOTg5NS1kNzkyYmExZGNkMzAiLAogICAibWV0YWRhdGEiOiB7CiAgICAiZWRpdGFibGUiOiB0cnVlLAogICAgInNsaWRlc2hvdyI6IHsKICAgICAic2xpZGVfdHlwZSI6ICIiCiAgICB9LAogICAgInRhZ3MiOiBbXQogICB9LAogICAic291cmNlIjogWwogICAgIiMjIFNldHVwIgogICBdCiAgfSwKICB7CiAgICJjZWxsX3R5cGUiOiAiY29kZSIsCiAgICJleGVjdXRpb25fY291bnQiOiBudWxsLAogICAiaWQiOiAiMTE3MzA3ZTQtZTY2Zi00MDQ0LWI3ZTctOTE0ZGMwMjkyODIxIiwKICAgIm1ldGFkYXRhIjogewogICAgInRhZ3MiOiBbCiAgICAgInBhcmFtZXRlcnMiCiAgICBdCiAgIH0sCiAgICJvdXRwdXRzIjogW10sCiAgICJzb3VyY2UiOiBbCiAgICAiLy8gRGVmYXVsdCBQYXJhbXNcbiIsCiAgICAidmFyIHNlcnZlciA9IFwibWFpbi54YXJncy5pb1wiIgogICBdCiAgfSwKICB7CiAgICJjZWxsX3R5cGUiOiAiY29kZSIsCiAgICJleGVjdXRpb25fY291bnQiOiBudWxsLAogICAiaWQiOiAiNGIzMDU4ZGEiLAogICAibWV0YWRhdGEiOiB7CiAgICAidGFncyI6IFtdCiAgIH0sCiAgICJvdXRwdXRzIjogW10sCiAgICJzb3VyY2UiOiBbCiAgICAiLy8gRGVmYXVsdCBTZXR1cFxuIiwKICAgICIvLyBTZWUgZGVubyBkYXggbW9kdWxlIGZvciBjYXBhYmlsaXRpZXMsIGluY2x1ZGluZyAkLnJlcXVlc3QsIHJldHJ5LCBldGNcbiIsCiAgICAiaW1wb3J0IHtDb21tYW5kQnVpbGRlciwgYnVpbGQkfSBmcm9tIFwiaHR0cHM6Ly9kZW5vLmxhbmQveC9kYXgvbW9kLnRzXCI7XG4iLAogICAgIlxuIiwKICAgICJjb25zdCBjb21tYW5kQnVpbGRlciA9IG5ldyBDb21tYW5kQnVpbGRlcigpXG4iLAogICAgIiAgLnN0ZG91dChcImluaGVyaXRQaXBlZFwiKVxuIiwKICAgICIgIC5zdGRlcnIoXCJpbmhlcml0UGlwZWRcIilcbiIsCiAgICAiICAucHJpbnRDb21tYW5kKHRydWUpO1xuIiwKICAgICJcbiIsCiAgICAiY29uc3QgJCA9IGJ1aWxkJCh7IGNvbW1hbmRCdWlsZGVyIH0pOyIKICAgXQogIH0sCiAgewogICAiY2VsbF90eXBlIjogIm1hcmtkb3duIiwKICAgImlkIjogImI3ZjE1MDk4LWQ1NDAtNGMyNC04M2JjLTczZjhiODE2ODhjNyIsCiAgICJtZXRhZGF0YSI6IHsKICAgICJlZGl0YWJsZSI6IHRydWUsCiAgICAic2xpZGVzaG93IjogewogICAgICJzbGlkZV90eXBlIjogIiIKICAgIH0sCiAgICAidGFncyI6IFtdCiAgIH0sCiAgICJzb3VyY2UiOiBbCiAgICAiIyMgT3BlcmF0aW9uIgogICBdCiAgfSwKICB7CiAgICJjZWxsX3R5cGUiOiAibWFya2Rvd24iLAogICAiaWQiOiAiYTVmODVkZGQtNjVlOC00ZDA0LTk2OTItZTUwNzI0ZjNhNjk3IiwKICAgIm1ldGFkYXRhIjogewogICAgImVkaXRhYmxlIjogdHJ1ZSwKICAgICJzbGlkZXNob3ciOiB7CiAgICAgInNsaWRlX3R5cGUiOiAiIgogICAgfSwKICAgICJ0YWdzIjogW10KICAgfSwKICAgInNvdXJjZSI6IFsKICAgICIjIyMgU3RlcCAxLiBFY2hvIEpTT04iCiAgIF0KICB9LAogIHsKICAgImNlbGxfdHlwZSI6ICJjb2RlIiwKICAgImV4ZWN1dGlvbl9jb3VudCI6IG51bGwsCiAgICJpZCI6ICJlNzc0ZTdjYSIsCiAgICJtZXRhZGF0YSI6IHsKICAgICJ0YWdzIjogW10KICAgfSwKICAgIm91dHB1dHMiOiBbXSwKICAgInNvdXJjZSI6IFsKICAgICJhd2FpdCAkYGVjaG8gJ3tcImFcIjogMX0nYC5qc29uKCkiCiAgIF0KICB9LAogIHsKICAgImNlbGxfdHlwZSI6ICJtYXJrZG93biIsCiAgICJpZCI6ICJjOTdhMzIxZS1kYmU3LTRlZGEtOTI5Yi04N2ZjNmFhMjkwNTIiLAogICAibWV0YWRhdGEiOiB7CiAgICAiZWRpdGFibGUiOiB0cnVlLAogICAgInNsaWRlc2hvdyI6IHsKICAgICAic2xpZGVfdHlwZSI6ICIiCiAgICB9LAogICAgInRhZ3MiOiBbXQogICB9LAogICAic291cmNlIjogWwogICAgIiMjIyBTdGVwIDIgR2V0IEdpdCBMb2ciCiAgIF0KICB9LAogIHsKICAgImNlbGxfdHlwZSI6ICJjb2RlIiwKICAgImV4ZWN1dGlvbl9jb3VudCI6IG51bGwsCiAgICJpZCI6ICI2ZWVkNmU0NiIsCiAgICJtZXRhZGF0YSI6IHsKICAgICJ0YWdzIjogW10KICAgfSwKICAgIm91dHB1dHMiOiBbXSwKICAgInNvdXJjZSI6IFsKICAgICJhd2FpdCAkYGdpdCBsb2dgLnRleHQoKSIKICAgXQogIH0sCiAgewogICAiY2VsbF90eXBlIjogIm1hcmtkb3duIiwKICAgImlkIjogImVjYTMwZGUwLWJhNjUtNDNjNi1iMjIwLWNhYjBkYWUzNjNmZiIsCiAgICJtZXRhZGF0YSI6IHsKICAgICJlZGl0YWJsZSI6IHRydWUsCiAgICAic2xpZGVzaG93IjogewogICAgICJzbGlkZV90eXBlIjogIiIKICAgIH0sCiAgICAidGFncyI6IFtdCiAgIH0sCiAgICJzb3VyY2UiOiBbCiAgICAiIyMgUm9sbGJhY2siCiAgIF0KICB9LAogIHsKICAgImNlbGxfdHlwZSI6ICJtYXJrZG93biIsCiAgICJpZCI6ICJmY2UwODQwNC00ZWIxLTQ1ZDMtOGY5Yy0yZTU2MDE2NjI5NjIiLAogICAibWV0YWRhdGEiOiB7CiAgICAiZWRpdGFibGUiOiB0cnVlLAogICAgInNsaWRlc2hvdyI6IHsKICAgICAic2xpZGVfdHlwZSI6ICIiCiAgICB9LAogICAgInRhZ3MiOiBbXQogICB9LAogICAic291cmNlIjogWwogICAgIiMjIENsZWFudXAiCiAgIF0KICB9LAogIHsKICAgImNlbGxfdHlwZSI6ICJtYXJrZG93biIsCiAgICJpZCI6ICIzNmNmZTQ2Mi1lNDI0LTQ1OWItOTU3YS0wZTA2ZDIzMWM5MjgiLAogICAibWV0YWRhdGEiOiB7CiAgICAiZWRpdGFibGUiOiB0cnVlLAogICAgInNsaWRlc2hvdyI6IHsKICAgICAic2xpZGVfdHlwZSI6ICIiCiAgICB9LAogICAgInRhZ3MiOiBbXQogICB9LAogICAic291cmNlIjogWwogICAgIiMjIEFjdGlvbiBJdGVtcyAvIExlYXJuaW5ncyIKICAgXQogIH0KIF0sCiAibWV0YWRhdGEiOiB7CiAgImp1cHl0ZXh0IjogewogICAiZm9ybWF0cyI6ICJpcHluYixhdXRvOnBlcmNlbnQiCiAgfSwKICAia2VybmVsc3BlYyI6IHsKICAgImRpc3BsYXlfbmFtZSI6ICJEZW5vIiwKICAgImxhbmd1YWdlIjogInR5cGVzY3JpcHQiLAogICAibmFtZSI6ICJkZW5vIgogIH0sCiAgImxhbmd1YWdlX2luZm8iOiB7CiAgICJmaWxlX2V4dGVuc2lvbiI6ICIudHMiLAogICAibWltZXR5cGUiOiAidGV4dC94LnR5cGVzY3JpcHQiLAogICAibmFtZSI6ICJ0eXBlc2NyaXB0IiwKICAgIm5iX2NvbnZlcnRlciI6ICJzY3JpcHQiLAogICAicHlnbWVudHNfbGV4ZXIiOiAidHlwZXNjcmlwdCIsCiAgICJ2ZXJzaW9uIjogIjUuMy4zIgogIH0sCiAgIndpZGdldHMiOiB7CiAgICJhcHBsaWNhdGlvbi92bmQuanVweXRlci53aWRnZXQtc3RhdGUranNvbiI6IHsKICAgICJzdGF0ZSI6IHt9LAogICAgInZlcnNpb25fbWFqb3IiOiAyLAogICAgInZlcnNpb25fbWlub3IiOiAwCiAgIH0KICB9CiB9LAogIm5iZm9ybWF0IjogNCwKICJuYmZvcm1hdF9taW5vciI6IDUKfQo=
""".strip()
# DENO_TEMPLATE_START
